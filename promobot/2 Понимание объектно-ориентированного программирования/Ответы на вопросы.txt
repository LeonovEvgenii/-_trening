1) Объясните четыре основных принципа ООП: инкапсуляция, наследование, полиморфизм, абстракция.

инкапсуляция - модификаторы доступа (public, privated, protected) и сетеры, гетеры. //С// это инструменты реализующие инкапусляцию в С++
Так же любое другое изолирование деталей внутри класса от изменения из вне.

наследование - создание связи между родительским и наследуемым классом для описания общих используемых полей и методов только в родительском.
Позволяет избежать дублирования кода и выстроить иерархию.
Есть несколько классификаций, помню только множественное наследовнаие (наследование от нескольких родистельсих в одном наследуемом)


полиморфизм - различное поведение при одной записи.
Пример - переопределение функций и операторов.

абстракция - создание абстрактных классов, не имеющих объектов и имеющих читсые виртуальные функции.
//С// ну и не только классов - в других языках есть такое понятие как интерфейсы, виртуальные классы и т.д.
Используется для описание общей функциональности.


2) Что такое класс и объект в C++?

Класс - пользовательский тип данных, с выделением полей и методов. Можно представить в виде "шаблона" для объектов.
Объект - заполненый "шаблон" класса с возможностью вызова методов.


3) Как реализуется наследование в C++?

class имя_класса : модификатор_доступа имя_родителского_класса // модификтор позволяет наследуемым полям и методам сразу задавать доступ
{
    конструктор(все_параметры, ...) : имя_родителского_класса(только_параметры_для_родитеского_класса, ...)
    
    деструкторы вызываются в обратной последовательнсти иерархии
}

Увидел списки инициализации в примерах.


4) Что такое виртуальные функции и зачем они нужны?

//Q// здесь несколько целей: 1. полиморфизм/ абстракция- вирт. ф. может описывать интерфейс и скрывать реализацию
// 2. наследование - мы указываем жесткий минимальный интерфейс (набор методов и модификаторов доступа) который должен быть реализован потомком
// 3. с т.з. памяти виртуальная функция записывается только в таблицу виртуальных функций для класса.
Функции переопределяемые в наследуемых классах.
virtual имя_функции(...)


5) Объясните разницу между публичным, защищённым и приватным доступом.

public - все помеченное будет доступно для вызова и изменения вне класса.
protected - доступ только в наследуемых классах.
privated - доступ только внутри класса

//Q// - это полностью неверно, сюда добавлю еще вопрос - чем отличается класс от структуры? 


6) Что такое конструктор и деструктор класса?

конструктор - используется для создания объекта и зполнения полей.
Могут быть перегружены или быть разных видов. Например, конструктор копирования.

Деструктор - вызывается при окончании использования объекта.
Обычно содержит код освобожения ресурсов и штатное завершение работы.
//Q// кто вызывает конструктор и деструктор?
// что такое принцип RAII  - в чем его смысл - приведи пример классов STL реализованных по этому принципу